openapi: 3.0.0
info:
  version: 1.0.0
  title: Albi Backend
  description: Albicchiere backend docs
  license:
    name: MIT
  contact:
    name: API Support
    email: support@albicchiere.com
servers:
  - url: 'https://api-staging.albicchiere.com'
  - url: 'https://api-dev.albicchiere.com'
  - url: 'https://api.albicchiere.com'
paths:
  /companies:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - companies
      operationId: getAllCompanies
      description: List all companies
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - companies
      operationId: createCompany
      description: Create a new company
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - fullName
                - name
                - phone
                - vatNumber
                - email
              properties:
                type:
                  type: string
                  enum:
                    - winery
                    - professional
                    - reseller
                fullName:
                  type: string
                phone:
                  type: string
                vatNumber:
                  type: string
                email:
                  type: string
                  format: email
                website:
                  type: string
                  format: uri
                instagram:
                  type: string
                  format: uri
                facebook:
                  type: string
                  format: uri
                twitter:
                  type: string
                  format: uri
                admins:
                  type: array
                  items:
                    type: string
                    pattern: '[a-fA-F0-9]{24}'
                addresses:
                  type: array
                  minItems: 1
                  items:
                    type: object
                    required:
                      - name
                      - country
                      - city
                      - province
                      - postalCode
                      - address
                    properties:
                      name:
                        type: string
                      isLocationEnabled:
                        type: boolean
                      country:
                        type: string
                      city:
                        type: string
                      province:
                        type: string
                      postalCode:
                        type: string
                      address:
                        type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  company:
                    $ref: '#/components/schemas/Company'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /companies/verify_admin_token:
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - companies
      operationId: verifyAdminToken
      description: Send token to claim the company
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/{companyId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - companies
      operationId: getCompany
      description: Get details about company
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  company:
                    $ref: '#/components/schemas/Company'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - companies
      operationId: editCompany
      description: Edit info about company
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                email:
                  type: string
                  format: email
                website:
                  type: string
                  format: uri
                instagram:
                  type: string
                  format: uri
                facebook:
                  type: string
                  format: uri
                twitter:
                  type: string
                  format: uri
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  company:
                    $ref: '#/components/schemas/Company'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/{companyId}/change_status':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - companies
      operationId: changeStatus
      description: Change status of company
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - State changed
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/{companyId}/overview':
    get:
      summary: Action
      security:
        - Authorization: []
      tags:
        - companies
      operationId: companyOverview
      description: Get an overview of the company to be used on markeplaces
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      company:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/Company'
                          - type: array
                            properties:
                              addresses:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Address'
                  - type: object
                    properties:
                      stats:
                        type: object
                        properties:
                          regions:
                            type: array
                            items:
                              type: string
                          grapes:
                            type: array
                            items:
                              type: string
                          countries:
                            type: array
                            items:
                              type: string
                          ratingsAverage:
                            type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/{companyId}/send_approval_request':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - companies
      operationId: sendApprovalRequest
      description: Send approval request to the company
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - ADMIN_APPROVAL_REQUIRED
                      - EMAIL_VERIFICATION_PENDING
                      - DOCUMENT_VERIFICATION_REQUIRED
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/{companyId}/image':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - companies
      operationId: getCompanyImage
      description: Get image of my company
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  company:
                    $ref: '#/components/schemas/Company'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - companies
      operationId: updateCompanyImage
      description: Edit image of my company
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Image created
                  image:
                    type: string
                    enum:
                      - 'https://albi-company-images-bucket-dev.s3.eu-west-1.amazonaws.com/63e4bf81ef2d0625feb00f6f.jpeg'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/{companyId}/addresses':
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - companies
      operationId: getAllCompanyAddresses
      description: List all addresses of a company
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  addresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - companies
      operationId: createCompanyAddress
      description: Create a new company address
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - country
                - city
                - province
                - postalCode
                - address
              properties:
                name:
                  type: string
                isLocationEnabled:
                  type: boolean
                country:
                  type: string
                city:
                  type: string
                province:
                  type: string
                postalCode:
                  type: string
                address:
                  type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    $ref: '#/components/schemas/Address'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/{companyId}/addresses/{addressId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - companies
      operationId: getCompanyAddress
      description: Get details about address
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: path
          name: addressId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    $ref: '#/components/schemas/Address'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - companies
      operationId: editCompanyAddress
      description: Edit info about company address
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: path
          name: addressId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                isLocationEnabled:
                  type: boolean
                country:
                  type: string
                city:
                  type: string
                province:
                  type: string
                postalCode:
                  type: string
                address:
                  type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    $ref: '#/components/schemas/Address'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - companies
      operationId: deleteCompanyAddress
      description: Delete Company Address
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: path
          name: addressId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Address deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/{companyId}/user_accesses':
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - companies
      operationId: getCompanyUserAccesses
      description: List all user accesses on a company
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_accesses:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserCompanyAccess'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - companies
      operationId: createCompanyUserAccess
      description: Add admin for company
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - role
              properties:
                userId:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
                role:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
                location:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_access:
                    $ref: '#/components/schemas/UserCompanyAccess'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/{companyId}/user_accesses/{accessId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - companies
      operationId: getCompanyUserAccess
      description: Get details user access
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: path
          name: accessId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_access:
                    $ref: '#/components/schemas/UserCompanyAccess'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - companies
      operationId: editCompanyUserAccess
      description: Edit user access
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: path
          name: accessId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
                location:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_access:
                    $ref: '#/components/schemas/UserCompanyAccess'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - companies
      operationId: deleteCompanyUserAccess
      description: Delete user access
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: path
          name: accessId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - User Access deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/${companyId}/company_setting':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - companies
      operationId: getCompanySetting
      description: Get company setting
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel_setting:
                    $ref: '#/paths/~1app_settings~1elabel_setting/get/responses/200/content/application~1json/schema/properties/elabel_setting'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/${companyId}/company_setting/${field}':
    post:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - companies
      operationId: createCompanySettingField
      description: Get company setting
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
        - in: path
          name: field
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    baseLanguage:
                      type: string
                    name:
                      type: string
                    field:
                      type: string
                      pattern:
                        - ingredients
                        - packagingMaterials
                - type: object
                  properties:
                    baseLanguage:
                      type: string
                    name:
                      type: string
                    category:
                      type: string
                - type: object
                  properties:
                    baseLanguage:
                      type: string
                    name:
                      type: string
                    image:
                      type: string
                - type: object
                  properties:
                    baseLanguage:
                      type: string
                    name:
                      type: string
                    components:
                      type: object
                - type: object
                  properties:
                    baseLanguage:
                      type: string
                    name:
                      type: string
                    capacity:
                      type: number
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel_setting:
                    $ref: '#/paths/~1app_settings~1elabel_setting/get/responses/200/content/application~1json/schema/properties/elabel_setting'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - companies
      operationId: createCompanySettingField
      description: Get company setting
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
        - in: path
          name: field
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                locale:
                  type: object
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel_setting:
                    $ref: '#/paths/~1app_settings~1elabel_setting/get/responses/200/content/application~1json/schema/properties/elabel_setting'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - companies
      operationId: deleteCompanySettingField
      description: Delete company setting field
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: header
          name: if-match
          schema:
            type: string
          required: true
        - in: path
          name: companyId
          required: true
          schema:
            type: string
        - in: path
          name: field
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Item deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/companies/${companyId}/company_setting/${field}/${name}':
    $ref: '#/paths/~1companies~1%24%7BcompanyId%7D~1company_setting~1%24%7Bfield%7D'
  '/companies/${companyId}/company_setting/${field}/${name}/image':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - companies
      operationId: updateCompanySettingFieldImage
      description: Edit image of company setting field
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: companyId
          required: true
          schema:
            type: string
        - in: path
          name: field
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Image created
                  avatar:
                    type: string
                    enum:
                      - 'https://images.albicchiere.com/63e4bf81ef2d0625feb00f6f.jpeg'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - users
      operationId: getAllUsers
      description: List all users
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          description: Endpoint reachable only after authentication with cognito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Internal scope auth error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_name:
                    type: string
                    enum:
                      - ForbiddenError
                  error_message:
                    type: string
        '500':
          description: Generic internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_name:
                    type: string
                    enum:
                      - InternalError
                  error_message:
                    type: string
  /users/me:
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - users
      operationId: getUserMe
      description: Get details about my user
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    allOf:
                      - $ref: '#/components/schemas/User'
                      - type: object
                        properties:
                          profileComplete:
                            type: number
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - users
      operationId: updateUserMe
      description: Edit info about my user
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                lastName:
                  type: string
                gender:
                  type: string
                  enum:
                    - male
                    - female
                    - other
                birthday:
                  type: string
                  format: date
                nationality:
                  type: string
                  pattern: '[A-Z]{3}'
                locale:
                  type: string
                measure:
                  type: string
                  enum:
                    - metric
                    - imperial
                dateFormat:
                  type: string
                  enum:
                    - metric
                    - imperial
                hourFormat:
                  type: string
                  enum:
                    - '12'
                    - '24'
                policyConsent:
                  type: object
                  required:
                    - consent
                  properties:
                    consent:
                      type: boolean
                      default: true
                marketingConsent:
                  type: object
                  properties:
                    consent:
                      type: boolean
                notifications:
                  type: object
                  properties:
                    general:
                      type: object
                      required:
                        - app
                        - email
                      properties:
                        app:
                          type: boolean
                        email:
                          type: boolean
                    devices:
                      type: object
                      required:
                        - app
                        - email
                      properties:
                        app:
                          type: boolean
                        email:
                          type: boolean
                nation:
                  type: string
                  pattern: '[A-Z]{3}'
                coordinates:
                  type: object
                  properties:
                    lat:
                      type: number
                    lng:
                      type: number
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - users
      operationId: deleteUserMe
      description: Request admins for user deletion
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users/me/session:
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - users
      operationId: getUserMeSession
      description: Get details about my user session
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_session:
                    allOf:
                      - $ref: '#/components/schemas/User'
                      - type: object
                        properties:
                          companyAccesses:
                            type: array
                            items:
                              allOf:
                                - type: object
                                  properties:
                                    _id:
                                      type: string
                                      pattern: '[a-fA-F0-9]{24}'
                                    status:
                                      type: string
                                      enum:
                                        - active
                                        - pending
                                        - rejected
                                    createdAt:
                                      type: string
                                      format: date-time
                                    updatedAt:
                                      type: string
                                      format: date-time
                                    company:
                                      $ref: '#/components/schemas/Company'
                                    role:
                                      $ref: '#/components/schemas/Role'
                                    location:
                                      $ref: '#/components/schemas/Address'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users/me/stats:
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - users
      operationId: getUserMeStats
      description: Get details about my user
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    $ref: '#/components/schemas/UserStat'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users/me/locations:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - users
      operationId: getUserCompanyAccesss
      description: List all user locations grouped by company
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: company
          required: false
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
            enum:
              - company
              - location
              - 'company,location'
              - all
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserCompanyAccess'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users/me/image:
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - users
      operationId: getUserImageMe
      description: Get image of my user
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - users
      operationId: updateUserImageMe
      description: Edit image of my user
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Image created
                  avatar:
                    type: string
                    enum:
                      - 'https://albi-user-images-bucket-dev.s3.eu-west-1.amazonaws.com/63e4bf81ef2d0625feb00f6f.jpeg'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users/me/add_parental_control_on_vintage:
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - users
      operationId: addParentalControlOnVintage
      description: Enable parental control for a wine vintage
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wine:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      location:
                        $ref: '#/components/schemas/UserCompanyAccess'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/users/me/remove_parental_control_on_vintage/{vintageId}':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - users
      operationId: removeParentalControlOnVintage
      description: Disable parental control for a wine vintage
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Removed parental control from user
                      - Removed parental control from location
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/users/{userId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - users
      operationId: getUser
      description: Get details about my user
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: userId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users/me/wishlist:
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - users
      operationId: getUserMeWishlist
      description: Get user's wishlist
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: expand
          schema:
            type: string
            enum:
              - vintage
              - vintage.wine
              - vintage.wine.winery
              - all
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWishList'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users/me/wishlist/add_vintage:
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - users
      operationId: addVintageToWishlist
      description: Add Vintage To Wishlist
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vintage:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWishList'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/users/me/wishlist/remove_vintage/{vintageId}':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - users
      operationId: removeVintageFromWishlist
      description: Remove Vintage From Wishlist
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Removed vintage from wishlist
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users/me/wishlist/share:
    post:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - users
      operationId: shareWishlist
      description: Share Wishlist
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  shared_wishlist:
                    $ref: '#/components/schemas/UserWishListShared'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/users/me/wishlist/{sharedWishlistId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - users
      operationId: getSharedWishlist
      description: Get Share Wishlist
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: sharedWishlistId
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  shared_wishlist:
                    $ref: '#/components/schemas/UserWishListShared'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /users/me/reviews:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - users
      operationId: getUserMeWineVintageReviews
      description: List all vintages review history of the logged in user.
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - reviewed
              - unreviewed
        - in: query
          name: page
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      required:
                        - _id
                        - wineId
                        - year
                        - alcohol
                        - temperature
                        - label
                        - status
                        - isClaimedByWinery
                        - createdBy
                        - createdAt
                        - updatedBy
                        - updatedAt
                      properties:
                        _id:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        wineId:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        year:
                          type: number
                        yearDetails:
                          type: string
                        description:
                          type: string
                        alcohol:
                          type: number
                        temperature:
                          type: integer
                        moods:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - icon
                            properties:
                              name:
                                type: string
                              icon:
                                type: string
                        pairings:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - icon
                            properties:
                              name:
                                type: string
                              icon:
                                type: string
                              match:
                                type: string
                                enum:
                                  - good
                                  - perfect
                        allergens:
                          type: array
                          items:
                            type: string
                        philosophy:
                          type: array
                          items:
                            type: string
                        images:
                          type: object
                          properties:
                            bottle:
                              type: object
                              properties:
                                default:
                                  type: string
                            label:
                              type: object
                              properties:
                                default:
                                  type: string
                                dispenser:
                                  type: string
                                smartbag:
                                  type: string
                            others:
                              type: array
                              items:
                                type: string
                        awards:
                          type: array
                          items:
                            type: string
                        status:
                          type: string
                          enum:
                            - pending
                            - active
                            - rejected
                        isClaimedByWinery:
                          type: boolean
                        createdBy:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        createdAt:
                          type: string
                          format: date-time
                        updatedBy:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        updatedAt:
                          type: string
                          format: date-time
                        reviewInfo:
                          type: object
                          required:
                            - type
                            - date
                          properties:
                            type:
                              type: string
                              enum:
                                - review
                                - cantina
                                - pour_wine
                            date:
                              type: string
                              format: date-time
                            reviewId:
                              type: string
                              pattern: '[a-fA-F0-9]{24}'
                            certified:
                              type: boolean
                            rating:
                              type: number
                  pages:
                    type: number
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /notifications/register_new_device:
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - notifications
      operationId: registerNewDevice
      description: Register New Device Token
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - platform
                - token
              properties:
                platform:
                  type: string
                  enum:
                    - android
                    - apple
                token:
                  type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /notifications/delete_device:
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - notifications
      operationId: deleteDevice
      description: Delete Device Token
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - platform
                - token
              properties:
                platform:
                  type: string
                  enum:
                    - android
                    - apple
                token:
                  type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /notifications:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - notifications
      operationId: getNotifications
      description: List notifications
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: mark_as_read
          schema:
            type: boolean
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        type:
                          type: string
                          enum:
                            - general
                            - promotion
                            - alert
                        message:
                          type: string
                        userId:
                          type: string
                        link:
                          type: string
                        expireAt:
                          type: string
                        read:
                          type: boolean
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
        '404':
          description: Element with requested uuid not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_name:
                    type: string
                    enum:
                      - NotFoundError
                  error_message:
                    type: string
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /wine/wine_container_models:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - wine_container_models
      operationId: getAllWineContainerModels
      description: List all wine container models
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  models:
                    type: array
                    items:
                      $ref: '#/components/schemas/WineContainer'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - wine_container_models
      operationId: createWineContainerModel
      description: Create a wine container model
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - capacity
              properties:
                type:
                  type: string
                  enum:
                    - smart_bag
                    - bottle
                capacity:
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  model:
                    $ref: '#/components/schemas/WineContainer'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wine_container_models/{id}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - wine_container_models
      operationId: getWineContainerModel
      description: Get details about wine container model
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  model:
                    $ref: '#/components/schemas/WineContainer'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - wine_container_models
      operationId: editWineContainerModel
      description: Update info about user vintage
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                capacity:
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  model:
                    $ref: '#/components/schemas/WineContainer'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - wine_container_models
      operationId: deleteWineContainerModel
      description: Delete Wine Container Model
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Model deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /wine/user_vintages:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - user_vintages
      operationId: getAllUserVintages
      description: List all user vintages of requesting user
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_vintages:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserVintage'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create User Vintage
      security:
        - Authorization: []
      tags:
        - user_vintages
      operationId: createUserVintage
      description: Create a new user vintage
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - winery
                - year
                - wineColor
                - temperature
              properties:
                name:
                  type: string
                  description: Name of the wine
                winery:
                  type: string
                  description: Name of the winery
                year:
                  type: integer
                  description: Vintage year
                wineColor:
                  type: string
                  enum:
                    - red
                    - white
                    - rose
                  description: Color of the wine
                temperature:
                  type: integer
                  description: Serving temperature
                region:
                  type: string
                  description: Wine region
                grapes:
                  type: array
                  items:
                    type: string
                  description: List of grape varieties
                alcohol:
                  type: number
                  description: Alcohol percentage
                wineryId:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
                  description: Optional reference to a winery
                wineId:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
                  description: Optional reference to a wine
                vintageId:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
                  description: Optional reference to a vintage
      responses:
        '201':
          description: User vintage created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_vintage:
                    $ref: '#/components/schemas/UserVintage'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/user_vintages/{userVintageId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - user_vintages
      operationId: getUserVintage
      description: Get details about user vintage
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: userVintageId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_vintage:
                    $ref: '#/components/schemas/UserVintage'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - user_vintages
      operationId: updateUserVintage
      description: Update info about user vintage
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: userVintageId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                winery:
                  type: string
                year:
                  type: string
                wineColor:
                  type: string
                  enum:
                    - red
                    - white
                    - rose
                temperature:
                  type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_vintage:
                    $ref: '#/components/schemas/UserVintage'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - user_vintages
      operationId: deleteUserVintage
      description: Delete User vintage
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: userVintageId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - User vintage deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/user_vintages/{userVintageId}/label':
    post:
      summary: Create User Vintage Label
      security:
        - Authorization: []
      tags:
        - user_vintages
      operationId: createUserVintageLabel
      description: Create a user vintage image
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: userVintageId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /wine/wines:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - wines
      operationId: getAllWines
      description: List all wines
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: color
          required: false
          schema:
            type: string
            enum:
              - red
              - white
              - rose
          description: More values separeted by comma
        - in: query
          name: region
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: wine_types
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: grapes
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: moods
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: pairings
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: allergens
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: philosophy
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: country
          required: false
          schema:
            type: string
          description: More values separeted by comma
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  wines:
                    type: array
                    items:
                      $ref: '#/components/schemas/Wine'
                  page:
                    type: integer
                  pages:
                    type: integer
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - wines
      operationId: createWine
      description: Create a wine
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wineryId
                - description
                - wineColor
              properties:
                wineryId:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
                description:
                  type: array
                  minimum: 0
                  items:
                    type: object
                    properties:
                      locale:
                        type: string
                      description:
                        type: string
                wineColor:
                  type: string
                  enum:
                    - red
                    - white
                    - rose
                wineTypes:
                  type: array
                  items:
                    type: string
                grapes:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  wine:
                    $ref: '#/components/schemas/Wine'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wines/{wineId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - wines
      operationId: getWine
      description: Get details about wine
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  wine:
                    $ref: '#/components/schemas/Wine'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - wines
      operationId: editWine
      description: Update info about wine
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                capacity:
                  type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  wine:
                    $ref: '#/components/schemas/Wine'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - wines
      operationId: deleteWine
      description: Delete Wine
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Wine deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wines/{wineId}/vintages':
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - wines
      operationId: getAllWineVintages
      description: List all vintages of a wine
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  vintages:
                    type: array
                    items:
                      $ref: '#/components/schemas/WineVintage'
                  page:
                    type: integer
                  pages:
                    type: integer
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - wines
      operationId: createWineVintage
      description: Create a wine vintage
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - country
                - city
                - province
                - postalCode
                - address
              properties:
                name:
                  type: string
                isLocationEnabled:
                  type: boolean
                country:
                  type: string
                city:
                  type: string
                province:
                  type: string
                postalCode:
                  type: string
                address:
                  type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  vintage:
                    $ref: '#/components/schemas/WineVintage'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wines/vintages/{vintageId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - wines
      operationId: getWineVintage
      description: Get details about wine vintage
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
        - in: query
          name: expand
          schema:
            type: string
            enum:
              - wine
              - wine.winery
              - wine.vintages
              - 'wine.winery,wine.vintages'
              - all
          required: false
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  vintage:
                    $ref: '#/components/schemas/WineVintage'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wines/{wineId}/vintages/{vintageId}':
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - wines
      operationId: editWineVintage
      description: Edit info about wine vintage
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                temperature:
                  type: number
                alcohol:
                  type: number
                moods:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - icon
                    properties:
                      name:
                        type: string
                      icon:
                        type: string
                pairings:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - icon
                    properties:
                      name:
                        type: string
                      icon:
                        type: string
                      match:
                        type: string
                        enum:
                          - good
                          - perfect
                allergens:
                  type: array
                  items:
                    type: string
                philosophy:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  vintage:
                    $ref: '#/components/schemas/WineVintage'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - wines
      operationId: deleteWineVintage
      description: Delete wine vintage
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Vintage deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wines/{wineId}/vintages/{vintageId}/label':
    post:
      summary: Create Image
      security:
        - Authorization: []
      tags:
        - wines
      operationId: createWineVintageLabel
      description: Create a vintage wine label
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wines/{wineId}/vintages/{vintageId}/image/{fileName}':
    post:
      summary: Create Image
      security:
        - Authorization: []
      tags:
        - wines
      operationId: addWineVintageImage
      description: Create a vintage wine image
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
        - in: path
          name: fileName
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete Image
      security:
        - Authorization: []
      tags:
        - wines
      operationId: deleteWineVintageImage
      description: Create a vintage wine image
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
        - in: path
          name: fileName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wines/{wineId}/vintages/{vintageId}/reviews':
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - wines
      operationId: getWineVintageReviews
      description: List all vintages review
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
        - in: query
          name: continuationToken
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      type: object
                      required:
                        - _id
                        - vintageId
                        - ownerId
                        - description
                        - rating
                        - createdBy
                        - createdAt
                        - updatedBy
                        - updatedAt
                      properties:
                        _id:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        vintageId:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        ownerId:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        author:
                          type: object
                          properties:
                            name:
                              type: string
                            lastname:
                              type: string
                            avatar:
                              type: string
                            reviewCount:
                              type: number
                        certified:
                          type: boolean
                        description:
                          type: string
                        rating:
                          type: integer
                        intensity:
                          type: number
                          format: double
                        tannin:
                          type: number
                          format: double
                        sweetness:
                          type: number
                          format: double
                        acidity:
                          type: number
                          format: double
                        fizziness:
                          type: number
                          format: double
                        createdBy:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        createdAt:
                          type: string
                          format: date-time
                        updatedBy:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        updatedAt:
                          type: string
                          format: date-time
                  continuationToken:
                    type: string
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - wines
      operationId: createWineVintageReview
      description: Create a wine vintage review
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rating
                - description
              properties:
                description:
                  type: string
                rating:
                  type: integer
                intensity:
                  type: number
                  format: double
                tannin:
                  type: number
                  format: double
                sweetness:
                  type: number
                  format: double
                acidity:
                  type: number
                  format: double
                fizziness:
                  type: number
                  format: double
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  review:
                    $ref: '#/components/schemas/WineVintageReview'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wines/{wineId}/vintages/{vintageId}/reviews/recap':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - wines
      operationId: getWineVintageReviewsRecap
      description: Get vintage review recap
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  vintage:
                    $ref: '#/components/schemas/WineVintageReviewRecap'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/wine/wines/{wineId}/vintages/{vintageId}/review':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - wines
      operationId: getWineVintageReview
      description: Get vintage review
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  vintage:
                    $ref: '#/components/schemas/WineVintageReview'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - wines
      operationId: editWineVintageReview
      description: Edit info about wine vintage review
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                rating:
                  type: integer
                intensity:
                  type: number
                  format: double
                tannin:
                  type: number
                  format: double
                sweetness:
                  type: number
                  format: double
                acidity:
                  type: number
                  format: double
                fizziness:
                  type: number
                  format: double
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  review:
                    $ref: '#/components/schemas/WineVintageReview'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - wines
      operationId: deleteWineVintageReview
      description: Delete wine vintage review
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: wineId
          required: true
          schema:
            type: string
        - in: path
          name: vintageId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Review deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /wine/wines/scan_label:
    post:
      summary: Scan wine by uploading a label
      security:
        - Authorization: []
      tags:
        - wines
      operationId: postWineScanLabel
      description: Get results from scanning an uploaded image of type jpeg or png.
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  best_match:
                    $ref: '#/components/schemas/WineVintage'
                  results:
                    type: array
                    items:
                      type: string
                      pattern: '[a-fA-F0-9]{24}'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /wine/wines/random:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - wines
      operationId: getRandomWines
      description: List a random set of wines
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  wines:
                    type: array
                    items:
                      $ref: '#/components/schemas/Wine'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /wine/wines/search:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - wines
      operationId: searchWines
      description: List of searched wines with company and vintage (the vintage is the one with highest ratings)
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            type: integer
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: color
          required: false
          schema:
            type: string
            enum:
              - red
              - white
              - rose
          description: More values separeted by comma
        - in: query
          name: region
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: wine_types
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: grapes
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: moods
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: pairings
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: allergens
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: philosophy
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: country
          required: false
          schema:
            type: string
          description: More values separeted by comma
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  wines:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        wineryId:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        name:
                          type: string
                        description:
                          type: array
                          items:
                            type: object
                            properties:
                              locale:
                                type: string
                              description:
                                type: string
                        wineColor:
                          type: string
                          enum:
                            - red
                            - white
                            - rose
                        region:
                          type: string
                        wineTypes:
                          type: array
                          items:
                            type: string
                        grapes:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              id:
                                type: string
                        status:
                          type: string
                          enum:
                            - pending
                            - active
                            - rejected
                        isClaimedByWinery:
                          type: boolean
                        createdBy:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        createdAt:
                          type: string
                          format: date-time
                        updatedBy:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        updatedAt:
                          type: string
                          format: date-time
                        vintage:
                          type: object
                          properties:
                            _id:
                              type: string
                              pattern: '[a-fA-F0-9]{24}'
                            wineId:
                              type: string
                              pattern: '[a-fA-F0-9]{24}'
                            year:
                              type: number
                            yearDetails:
                              type: string
                            description:
                              type: string
                            alcohol:
                              type: number
                            temperature:
                              type: integer
                            moods:
                              type: array
                              items:
                                type: object
                                required:
                                  - name
                                  - icon
                                properties:
                                  name:
                                    type: string
                                  icon:
                                    type: string
                            pairings:
                              type: array
                              items:
                                type: object
                                required:
                                  - name
                                  - icon
                                properties:
                                  name:
                                    type: string
                                  icon:
                                    type: string
                                  match:
                                    type: string
                                    enum:
                                      - good
                                      - perfect
                            allergens:
                              type: array
                              items:
                                type: string
                            philosophy:
                              type: array
                              items:
                                type: string
                            images:
                              type: object
                              properties:
                                bottle:
                                  type: object
                                  properties:
                                    default:
                                      type: string
                                label:
                                  type: object
                                  properties:
                                    default:
                                      type: string
                                    dispenser:
                                      type: string
                                    smartbag:
                                      type: string
                                others:
                                  type: array
                                  items:
                                    type: string
                            awards:
                              type: array
                              items:
                                type: string
                            status:
                              type: string
                              enum:
                                - pending
                                - active
                                - rejected
                            isClaimedByWinery:
                              type: boolean
                            createdBy:
                              type: string
                              pattern: '[a-fA-F0-9]{24}'
                            createdAt:
                              type: string
                              format: date-time
                            updatedBy:
                              type: string
                              pattern: '[a-fA-F0-9]{24}'
                            updatedAt:
                              type: string
                              format: date-time
                        winery:
                          type: object
                          properties:
                            _id:
                              type: string
                              pattern: '[a-fA-F0-9]{24}'
                            type:
                              type: string
                              enum:
                                - winery
                                - professional
                                - reseller
                            fullName:
                              type: string
                            name:
                              type: string
                            phone:
                              type: string
                            vatNumber:
                              type: string
                            email:
                              type: string
                              format: email
                            website:
                              type: string
                              format: uri
                            instagram:
                              type: string
                              format: uri
                            facebook:
                              type: string
                              format: uri
                            twitter:
                              type: string
                              format: uri
                            createdBy:
                              type: string
                              pattern: '[a-fA-F0-9]{24}'
                            createdAt:
                              type: string
                              format: date-time
                            status:
                              type: string
                              enum:
                                - pending
                                - active
                                - rejected
                  page:
                    type: integer
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /cantina/cantina_vintages:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - cantina
      operationId: getCantina
      description: List all smartbag and bottles in cantina grouped by vintages. Use the expand filter to get either userVintage or vintage object.
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            type: integer
        - in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - name
              - pairedAt
              - bestBefore
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - in: query
          name: expand
          required: false
          schema:
            type: string
            enum:
              - vintage
              - vintage.wine
              - vintage.wine.winery
              - all
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: color
          required: false
          schema:
            type: string
            enum:
              - red
              - white
              - rose
          description: More values separeted by comma
        - in: query
          name: region
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: wine_types
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: grapes
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: moods
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: pairings
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: allergens
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: philosophy
          required: false
          schema:
            type: string
          description: More values separeted by comma
        - in: query
          name: country
          required: false
          schema:
            type: string
          description: More values separeted by comma
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  vintages:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        items:
                          type: array
                          items:
                            oneOf:
                              - $ref: '#/components/schemas/Bottle'
                              - $ref: '#/components/schemas/SmartBag'
                        userVintage:
                          $ref: '#/components/schemas/UserVintage'
                        vintage:
                          $ref: '#/components/schemas/WineVintage'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /cantina/smart_bags:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - smart_bags
      operationId: getAllUserSmartBags
      description: List all smart bags
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  smart_bags:
                    type: array
                    items:
                      $ref: '#/components/schemas/SmartBag'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - smart_bags
      operationId: createSmartBag
      description: Create a smart bag
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - serial
                - expiryDate
              properties:
                model:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
                serial:
                  type: string
                  pattern: '[A-F0-9]{16}'
                expiryDate:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  smart_bag:
                    $ref: '#/components/schemas/SmartBag'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/cantina/smart_bags/{smartBagId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - smart_bags
      operationId: getUserSmartBag
      description: Detail a smart bag
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: smartBagId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: query
          name: expand
          required: false
          schema:
            type: string
            enum:
              - vintage
              - vintage.wine
              - vintage.wine.winery
              - all
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  smart_bag:
                    $ref: '#/components/schemas/SmartBag'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - smart_bags
      operationId: deleteUserSmartBag
      description: Delete a smart bag
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: smartBagId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Smart Bag deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/cantina/smart_bags/{serial}/check_nfc':
    post:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - smart_bags
      operationId: checkSmartBagNFC
      description: Check smart bag using it's NFC serial
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: serial
          required: true
          schema:
            type: string
            pattern: '[A-F0-9]{16}'
        - in: query
          name: expand
          required: false
          schema:
            type: string
            enum:
              - vintage
              - vintage.wine
              - vintage.wine.winery
              - all
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  smart_bag:
                    $ref: '#/components/schemas/SmartBag'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/cantina/smart_bags/{serial}/transfer_ownership':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - smart_bags
      operationId: transferSmartBagOwnership
      description: transferSmartBagOwnership
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: serial
          required: true
          schema:
            type: string
            pattern: '[A-F0-9]{16}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  smart_bag:
                    $ref: '#/components/schemas/SmartBag'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/cantina/smart_bags/{serial}/fill_smart_bag':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - smart_bags
      operationId: fillSmartBag
      description: fillSmartBag
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: serial
          required: true
          schema:
            type: string
            pattern: '[A-F0-9]{16}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vintage
              properties:
                vintage:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  smart_bag:
                    $ref: '#/components/schemas/SmartBag'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/cantina/smart_bags/{serial}/refill_smart_bag':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - smart_bags
      operationId: refillSmartBag
      description: refillSmartBag
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: serial
          required: true
          schema:
            type: string
            pattern: '[A-F0-9]{16}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vintage
              properties:
                vintage:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  smart_bag:
                    $ref: '#/components/schemas/SmartBag'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/cantina/smart_bags/{serial}/set_custom_temperature':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - smart_bags
      operationId: setCustomTemperature
      description: setCustomTemperature
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: serial
          required: true
          schema:
            type: string
            pattern: '[A-F0-9]{16}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customTemperature
              properties:
                customTemperature:
                  type: number
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  smart_bag:
                    $ref: '#/components/schemas/SmartBag'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /cantina/bottles:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - bottles
      operationId: getAllUserBottles
      description: List all bottles
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  bottles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bottle'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - bottles
      operationId: createUserBottle
      description: Create a bottle
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required:
                    - model
                    - vintageId
                  properties:
                    model:
                      type: string
                      pattern: '[a-fA-F0-9]{24}'
                    vintageId:
                      type: string
                      pattern: '[a-fA-F0-9]{24}'
                - type: object
                  required:
                    - model
                    - userVintage
                  properties:
                    model:
                      type: string
                      pattern: '[a-fA-F0-9]{24}'
                    userVintage:
                      type: object
                      required:
                        - name
                        - winery
                        - year
                        - wineColor
                        - temperature
                      properties:
                        name:
                          type: string
                        winery:
                          type: string
                        year:
                          type: string
                        wineColor:
                          type: string
                          enum:
                            - red
                            - white
                            - rose
                        temperature:
                          type: integer
                        region:
                          type: string
                        grapes:
                          type: array
                          items:
                            type: string
                        alcohol:
                          type: number
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  bottle:
                    $ref: '#/components/schemas/Bottle'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/cantina/bottles/{bottleId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - bottles
      operationId: getUserBottle
      description: Detail a bottle
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: bottleId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bottle:
                    $ref: '#/components/schemas/Bottle'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - bottles
      operationId: deleteUserBottle
      description: Delete a bottle
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: header
          name: if-match
          schema:
            type: string
          required: true
        - in: path
          name: bottleId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Bottle deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/cantina/bottles/{bottleId}/turn_into_bag':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - bottles
      operationId: turnBottleIntoBag
      description: turnBottleIntoBag
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: bottleId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bags
              properties:
                bags:
                  type: array
                  items:
                    type: object
                    required:
                      - quantityLeft
                      - serial
                    properties:
                      quantityLeft:
                        type: number
                      serial:
                        type: string
                        pattern: '[A-F0-9]{16}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Successfully trasformed into bags
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /cantina/bottles/counters:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - bottles
      operationId: getAllUserBottlesCounters
      description: List all vintages with bottles counter
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: model
          required: false
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: query
          name: vintage
          required: false
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  bottles:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: object
                          properties:
                            model:
                              type: string
                              pattern: '[a-fA-F0-9]{24}'
                            vintageId:
                              type: string
                              pattern: '[a-fA-F0-9]{24}'
                        count:
                          type: integer
                        lastEdit:
                          type: string
                          format: date-time
                        bottleId:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/cantina/bottles/{bottleId}/counters':
    post:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - bottles
      operationId: editUserBottlesCounters
      description: edit user bottle counter
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: bottleId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                count:
                  type: integer
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Bottles updated
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /dispenser/dispensers:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: getAllDispensers
      description: List all dispensers
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: chassis_id
          required: false
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: query
          name: room_id
          required: false
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  dispensers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dispenser'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: createDispenser
      description: Create a new dispensers
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - firmware
                - serial
              properties:
                model:
                  type: string
                  enum:
                    - Albi Home M+
                    - Albi Home S
                    - Albi Pro
                macAddress:
                  type: string
                firmware:
                  type: string
                serial:
                  type: string
                thingName:
                  type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  dispenser:
                    $ref: '#/components/schemas/Dispenser'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/dispensers/{dispenserId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: getDispenser
      description: Get details about dispenser
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  dispenser:
                    $ref: '#/components/schemas/Dispenser'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: updateDispenser
      description: Edit info about dispenser
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                chassis:
                  type: object
                  properties:
                    chassis:
                      type: string
                      pattern: '[a-fA-F0-9]{24}'
                    slot:
                      type: number
                roomId:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  dispenser:
                    $ref: '#/components/schemas/Dispenser'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: deleteDispenser
      description: Delete dispenser
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Dispenser deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/dispensers/{serial}/activate':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: activateDispenser
      description: Activate a dispensers
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required:
                    - name
                    - roomId
                  properties:
                    name:
                      type: string
                    roomId:
                      type: string
                      pattern: '[a-fA-F0-9]{24}'
                - type: object
                  required:
                    - name
                    - chassis
                  properties:
                    name:
                      type: string
                    chassis:
                      type: object
                      properties:
                        chassisId:
                          type: string
                          pattern: '[a-fA-F0-9]{24}'
                        slot:
                          type: number
      responses:
        '202':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                    pattern: '[a-fA-F0-9]{24}'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/dispensers/{dispenserId}/pour_wine':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: pourWine
      description: Command for dispenser pouring
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
              properties:
                quantity:
                  type: string
                  enum:
                    - drink
                    - taste
      responses:
        '202':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                    pattern: '[a-fA-F0-9]{24}'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/dispensers/{dispenserId}/set_cooling_mode':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: setCoolingMode
      description: Set dispenser's cooling mode
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - mode
              properties:
                mode:
                  type: string
                  enum:
                    - eco
                    - boost
                    - silent
      responses:
        '202':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/dispensers/{dispenserId}/set_schedule':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: setSchedule
      description: Scheduling the dispenser temperature
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - scheduleTime
              properties:
                scheduleTime:
                  type: string
                  format: date-time
      responses:
        '202':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/dispensers/{dispenserId}/remove_schedule':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: removeSchedule
      description: Remove dispenser schedule
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '202':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/dispensers/{dispenserId}/start_vacuum_bag':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: startVacuumBag
      description: Command for starting the vacuum function
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bagSerial
              properties:
                bagSerial:
                  type: string
      responses:
        '202':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                    pattern: '[a-fA-F0-9]{24}'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/dispensers/{dispenserId}/toggle_parental_control':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: toggleDispenserParentalControl
      description: Toggle dispenser parental control
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '202':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/dispensers/{dispenserId}/get_data':
    post:
      summary: Action
      security:
        - Authorization: []
      tags:
        - dispensers
      operationId: getDispenserData
      description: Requests dispenser for up-to-date data
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: dispenserId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '202':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      dispenser:
                        type: object
                        properties:
                          _id:
                            type: string
                            pattern: '[a-fA-F0-9]{24}'
                          ownerId:
                            type: string
                            pattern: '[a-fA-F0-9]{24}'
                          name:
                            type: string
                          roomName:
                            type: string
                          wifiName:
                            type: string
                          chassis:
                            type: object
                            properties:
                              name:
                                type: string
                              slot:
                                type: number
                          macAddress:
                            type: string
                          firmware:
                            type: string
                          serviceSchedule:
                            type: string
                            format: date-time
                          wineReadyAt:
                            type: string
                            format: date-time
                          coolingMode:
                            type: string
                            enum:
                              - eco
                              - boost
                              - silent
                          parentalControl:
                            type: boolean
                          batteryStatus:
                            type: string
                            enum:
                              - empty
                              - low
                              - half
                              - full
                              - charging
                              - plugged
                          model:
                            type: string
                            enum:
                              - Albi Home M+
                              - Albi Home S
                              - Albi Pro
                          alerts:
                            type: array
                            items:
                              type: string
                      bag:
                        type: object
                        properties:
                          bagSerial:
                            type: string
                            pattern: '[a-fA-F0-9]{24}'
                          smartbag:
                            type: object
                            properties:
                              _id:
                                type: string
                                pattern: '[a-fA-F0-9]{24}'
                              model:
                                type: string
                              customTemperature:
                                type: string
                              type:
                                type: string
                              quantityLeft:
                                type: number
                              qualityScore:
                                type: number
                              expiryDate:
                                type: number
                                format: date-time
                              refillCounter:
                                type: number
                          vintage:
                            type: object
                            properties:
                              _id:
                                type: string
                                pattern: '[a-fA-F0-9]{24}'
                              wineId:
                                type: string
                                pattern: '[a-fA-F0-9]{24}'
                              name:
                                type: string
                              winery:
                                type: string
                              wineColor:
                                type: string
                              region:
                                type: string
                              grapes:
                                type: array
                                items:
                                  type: string
                              year:
                                type: number
                              alcohol:
                                type: number
                              temperature:
                                type: number
                              label:
                                type: number
                              labelQuality:
                                type: string
                              parentalControl:
                                type: boolean
                          userVintage:
                            type: object
                            properties:
                              _id:
                                type: string
                                pattern: '[a-fA-F0-9]{24}'
                              name:
                                type: string
                              winery:
                                type: string
                              wineColor:
                                type: string
                              region:
                                type: string
                              grapes:
                                type: array
                                items:
                                  type: string
                              year:
                                type: number
                              alcohol:
                                type: number
                              temperature:
                                type: number
                              parentalControl:
                                type: boolean
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /dispenser/chassis:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - chassis
      operationId: getAllChassis
      description: List all chassis
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  chassis:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chassis'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - chassis
      operationId: createChassis
      description: Create a new chassis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - totalSlots
                - roomId
              properties:
                name:
                  type: string
                totalSlots:
                  type: number
                roomId:
                  type: string
                  pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  chassis:
                    $ref: '#/components/schemas/Chassis'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/chassis/{chassisId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - chassis
      operationId: getChassis
      description: Get details about chassis
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: chassisId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: query
          name: room_id
          required: false
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  chassis:
                    $ref: '#/components/schemas/Chassis'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - chassis
      operationId: editChassis
      description: Update chassis
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: chassisId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  chassis:
                    $ref: '#/components/schemas/Chassis'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - chassis
      operationId: deleteChassis
      description: Delete chassis
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: chassisId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Chassis deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /dispenser/rooms:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - dispenser_rooms
      operationId: getAllRooms
      description: List all rooms
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      $ref: '#/components/schemas/DispenserRoom'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - dispenser_rooms
      operationId: createRoom
      description: Create a new room
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    $ref: '#/components/schemas/DispenserRoom'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/rooms/{roomId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - dispenser_rooms
      operationId: getRoom
      description: Get details about room
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: roomId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_vintage:
                    $ref: '#/components/schemas/DispenserRoom'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - dispenser_rooms
      operationId: editRoom
      description: Update room
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: roomId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_vintage:
                    $ref: '#/components/schemas/DispenserRoom'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - dispenser_rooms
      operationId: deleteRoom
      description: Delete Room
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: path
          name: roomId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Room deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /dispenser/jobs:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - dispenser_jobs
      operationId: getAllJobs
      description: List all jobs
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/jobs/{jobId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - dispenser_jobs
      operationId: getJob
      description: Get details about job
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: jobId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /dispenser/jobs/executed:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - dispenser_jobs
      operationId: getAllExecutedJobs
      description: List all executed jobs
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutedJob'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/dispenser/jobs/executed/{jobId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - dispenser_jobs
      operationId: getExecutedJob
      description: Get details about executed job
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: jobId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/ExecutedJob'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /app_settings/mobile_app_config/albi_sommelier:
    get:
      summary: AlbiSommelier config
      security:
        - Authorization: []
      tags:
        - app_settings
      operationId: getAlbiSommelierConfig
      description: Get albi sommelier page configuration
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  pages:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        description:
                          type: string
                        icon:
                          type: string
                        filters:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                              value:
                                type: string
                              label:
                                type: string
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /app_settings/mobile_app_config/home:
    get:
      summary: Home config
      security:
        - Authorization: []
      tags:
        - app_settings
      operationId: getHomeConfig
      description: Get home page configuration
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /app_settings/mobile_app_config/search:
    get:
      summary: Search config
      security:
        - Authorization: []
      tags:
        - app_settings
      operationId: getSearchConfig
      description: Get search page configuration
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /app_settings/wine_setting:
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - wine_setting
      operationId: getWineSetting
      description: Get wine setting
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  wine_setting:
                    type: object
                    required:
                      - _id
                      - grapes
                      - moods
                      - pairings
                    properties:
                      _id:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      grapes:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            id:
                              type: string
                      moods:
                        type: array
                        items:
                          type: object
                          required:
                            - name
                            - icon
                          properties:
                            name:
                              type: string
                            icon:
                              type: string
                            locale:
                              type: object
                      pairings:
                        type: array
                        items:
                          type: object
                          required:
                            - name
                            - icon
                          properties:
                            name:
                              type: string
                            icon:
                              type: string
                            locale:
                              type: object
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /app_settings/wine_setting/countries:
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - wine_setting
      operationId: getWineCountries
      description: Get wine countries with wineCount
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource. the Country will be traslated to the locale language of the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    enum:
                      - it
                      - fr
                  wineCount:
                    type: number
                    enum:
                      - 35
                      - 5
                  country:
                    type: string
                    enum:
                      - Italy
                      - France
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /app_settings/elabel_setting:
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - elabel_setting
      operationId: getElabelSetting
      description: Get elabel setting
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel_setting:
                    type: object
                    required: null
                    properties:
                      _id:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      wineContainerModels:
                        type: object
                        properties:
                          name:
                            type: string
                          capacity:
                            type: number
                          modelId:
                            type: string
                            pattern: '[a-fA-F0-9]{24}'
                      categories:
                        name:
                          type: string
                        field:
                          type: string
                          enum:
                            - ingredients
                            - packagingMaterials
                      ingredients:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            category:
                              type: string
                            locale:
                              type: array
                      certifications:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            image:
                              type: string
                            locale:
                              type: array
                      warnings:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            image:
                              type: string
                            locale:
                              type: array
                      packagingComponents:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            locale:
                              type: array
                      packagingMaterials:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            locale:
                              type: array
                      packagings:
                        type: object
                        properties:
                          name:
                            type: string
                          locale:
                            type: array
                          components:
                            type: array
                            items:
                              type: object
                              properties:
                                packagingComponent:
                                  type: string
                                packgingMaterial:
                                  type: string
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /elabels:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - elabels
      operationId: getAllElabels
      description: List all elabels
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: companyId
          required: false
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabels:
                    type: object
                  page:
                    type: integer
                  pages:
                    type: integer
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - elabels
      operationId: createElabel
      description: Create new elabel
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/paths/~1elabels/post/responses/200/content/application~1json/schema/properties/elabel'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel:
                    type: object
                    required:
                      - _id
                      - companyId
                      - vintageId
                      - modelId
                      - baseLanguage
                      - pageLayout
                      - qrCode
                      - warnings
                      - productionDetails
                      - legalDetails
                      - certifications
                      - packaging
                      - batches
                      - createdBy
                    properties:
                      _id:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      companyId:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      vintageId:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      modelId:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      baseLanguage:
                        type: string
                      pageLayout:
                        type: object
                        properties:
                          background:
                            type: string
                          sheetBackground:
                            type: string
                      qrCode:
                        type: object
                        properties:
                          background:
                            type: string
                          showLogo:
                            type: boolean
                          pattern:
                            type: object
                            properties:
                              dotsOptions:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - dots
                                      - rounded
                                      - classy
                                      - classy-rounded
                                      - square
                                      - extra-rounded
                                  color:
                                    type: string
                              cornersSquareOptions:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - dots
                                      - rounded
                                      - classy
                                      - classy-rounded
                                      - square
                                      - extra-rounded
                                  color:
                                    type: string
                              cornersDotOptions:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - dots
                                      - rounded
                                      - classy
                                      - classy-rounded
                                      - square
                                      - extra-rounded
                                  color:
                                    type: string
                      warnings:
                        type: array
                        of: string
                      productionDetails:
                        type: object
                        properties:
                          operatorType:
                            type: string
                            enum:
                              - bottler
                              - importer
                              - producer
                          operatorName:
                            type: string
                          countries:
                            type: array
                            of: string
                      legalDetails:
                        type: object
                        properties:
                          impressum:
                            type: string
                          countries:
                            type: array
                            of: string
                      certifications:
                        type: array
                        items:
                          type: string
                      packaging:
                        type: string
                      batches:
                        type: string
                        items:
                          type: object
                      createdBy:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      updatedBy:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/elabels/{elabelId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - elabels
      operationId: getElabel
      description: Get details about elabel
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: elabelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel:
                    $ref: '#/paths/~1elabels/post/responses/200/content/application~1json/schema/properties/elabel'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - elabels
      operationId: editElabel
      description: Update info about elabel
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: elabelId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                capacity:
                  type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel:
                    $ref: '#/paths/~1elabels/post/responses/200/content/application~1json/schema/properties/elabel'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          description: Endpoint reachable only after authentication with cognito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - elabels
      operationId: deleteElabel
      description: Delete elabel
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: elabelId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Elabel deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/elabels/{elabelId}/batches':
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - elabel_batches
      operationId: getAllElabelBatches
      description: List all elabel batches
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: companyId
          required: false
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabels:
                    type: object
                  page:
                    type: integer
                  pages:
                    type: integer
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - elabel_batches
      operationId: createElabelBatch
      description: Create new elabel batch
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/paths/~1elabels~1batches~1%7BbatchId%7D/get/responses/200/content/application~1json/schema/properties/elabel'
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel:
                    $ref: '#/paths/~1elabels~1batches~1%7BbatchId%7D/get/responses/200/content/application~1json/schema/properties/elabel'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/elabels/batches/{batchId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - elabel_batches
      operationId: getElabelBatch
      description: Get details about elabel batch
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: elabelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel:
                    type: object
                    required:
                      - _id
                      - companyId
                      - vintageId
                      - modelId
                      - baseLanguage
                      - pageLayout
                      - qrCode
                      - warnings
                      - productionDetails
                      - legalDetails
                      - certifications
                      - packaging
                      - batches
                      - createdBy
                    properties:
                      _id:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      elabelId:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      batchId:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      name:
                        type: string
                      status:
                        type: string
                        enum:
                          - draft
                          - published
                      ingredients:
                        type: array
                        items:
                          type: object
                          properties:
                            ingredient:
                              type: string
                            isAllergen:
                              type: boolean
                      nutritionFacts:
                        type: object
                        properties:
                          alcohol:
                            type: number
                          residualSugar:
                            type: number
                          tartaricAcid:
                            type: number
                          energy:
                            type: number
                          fat:
                            type: number
                          saturatedFat:
                            type: number
                          carbohydrate:
                            type: number
                          carbohydrateSugar:
                            type: number
                          protein:
                            type: number
                          salt:
                            type: number
                          aggregateSmallQuantities:
                            type: number
                      createdBy:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      updatedBy:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - elabel_batches
      operationId: editElabelBatch
      description: Update info about elabel batch
      parameters:
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: elabelId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                capacity:
                  type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  elabel:
                    $ref: '#/paths/~1elabels~1batches~1%7BbatchId%7D/get/responses/200/content/application~1json/schema/properties/elabel'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - elabel_batches
      operationId: deleteElabelBatch
      description: Delete elabel batch
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: elabelId
          required: true
          schema:
            type: string
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Elabel batch deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '412':
          $ref: '#/paths/~1elabels~1%7BelabelId%7D/patch/responses/412'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /winelists:
    get:
      tags:
        - winelists
      summary: Get all wine lists
      description: Retrieve all wine lists for a location
      parameters:
        - name: albi-current-company
          in: header
          description: Current company ID
          required: false
          schema:
            type: string
        - name: albi-current-location
          in: header
          description: Current location ID
          required: false
          schema:
            type: string
        - name: albi-user-coordinates
          in: header
          description: 'User coordinates in format "lat,lon"'
          required: false
          schema:
            type: string
        - name: location_id
          in: query
          description: ID of the location to get wine lists for
          required: false
          schema:
            type: string
        - name: expand
          in: query
          description: Fields to expand (use 'all' to expand all fields)
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved wine lists
          content:
            application/json:
              schema:
                type: object
                properties:
                  winelists:
                    type: array
                    items:
                      $ref: '#/paths/~1winelists/post/responses/201/content/application~1json/schema/properties/winelist'
                  page:
                    type: integer
        '403':
          description: Forbidden - Location ID is required
        '500':
          description: Internal server error
    post:
      tags:
        - winelists
      summary: Create a new wine list
      description: Create a new wine list for a location
      parameters:
        - name: albi-current-company
          in: header
          description: Current company ID
          required: true
          schema:
            type: string
        - name: albi-current-location
          in: header
          description: Current location ID
          required: true
          schema:
            type: string
        - name: albi-user-coordinates
          in: header
          description: 'User coordinates in format "lat,lon"'
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                vintages:
                  type: array
                  items:
                    type: object
                    properties:
                      vintageId:
                        type: string
                      userVintageId:
                        type: string
                      modelPrices:
                        type: array
                        items:
                          type: object
                          properties:
                            modelName:
                              type: string
                            capacity:
                              type: number
                            price:
                              type: number
                      isVisible:
                        type: boolean
                extraWineData:
                  type: array
                  items:
                    type: string
                categories:
                  type: array
                  items:
                    type: string
                template:
                  type: string
                isActive:
                  type: boolean
      responses:
        '201':
          description: Wine list created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  winelist:
                    type: object
                    required:
                      - _id
                      - locationId
                      - name
                      - vintages
                      - extraWineData
                      - categories
                      - template
                      - isActive
                      - updatedAt
                    properties:
                      _id:
                        type: string
                        description: The unique identifier of the wine list
                      locationId:
                        type: string
                        description: The location ID this wine list belongs to
                      name:
                        type: string
                        description: The name of the wine list
                      vintages:
                        type: array
                        items:
                          type: object
                          required:
                            - vintageId
                            - userVintageId
                            - modelPrices
                            - isVisible
                          properties:
                            vintageId:
                              type: string
                              description: ID of the wine vintage
                            userVintageId:
                              type: string
                              description: ID of the user vintage
                            modelPrices:
                              type: array
                              items:
                                type: object
                                required:
                                  - modelName
                                  - price
                                properties:
                                  modelName:
                                    type: string
                                    description: Name of the model (e.g. glass)
                                  capacity:
                                    type: number
                                    description: Capacity in ml
                                  price:
                                    type: number
                                    description: Price for this model and capacity
                            isVisible:
                              type: boolean
                              description: Whether this vintage is visible in the wine list
                            vintage:
                              $ref: '#/components/schemas/WineVintage'
                            userVintage:
                              $ref: '#/components/schemas/UserVintage'
                      extraWineData:
                        type: array
                        items:
                          type: string
                        description: Additional wine data fields to display
                      categories:
                        type: array
                        items:
                          type: string
                        description: Categories of wines in the list
                      template:
                        type: string
                        description: Template used for displaying the wine list
                      isActive:
                        type: boolean
                        description: Whether this wine list is currently active
                      updatedAt:
                        type: string
                        format: date-time
                        description: Last update timestamp
                      createdBy:
                        type: string
                        description: ID of the user who created this wine list
                      updatedBy:
                        type: string
                        description: ID of the user who last updated this wine list
        '400':
          description: Bad request - Missing required fields
        '403':
          description: Forbidden - Invalid location
        '500':
          description: Internal server error
  '/winelists/{wineListId}':
    get:
      tags:
        - winelists
      summary: Get wine list by ID
      description: Retrieve a specific wine list by its ID
      parameters:
        - name: albi-current-company
          in: header
          description: Current company ID
          required: true
          schema:
            type: string
        - name: albi-current-location
          in: header
          description: Current location ID
          required: true
          schema:
            type: string
        - name: albi-user-coordinates
          in: header
          description: 'User coordinates in format "lat,lon"'
          required: false
          schema:
            type: string
        - name: wineListId
          in: path
          description: ID of the wine list to retrieve
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Fields to expand (use 'all' to expand all fields)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved wine list
          content:
            application/json:
              schema:
                type: object
                properties:
                  winelist:
                    $ref: '#/paths/~1winelists/post/responses/201/content/application~1json/schema/properties/winelist'
        '404':
          description: Wine list not found
        '500':
          description: Internal server error
    patch:
      tags:
        - winelists
      summary: Update wine list
      description: Update an existing wine list
      parameters:
        - name: albi-current-company
          in: header
          description: Current company ID
          required: true
          schema:
            type: string
        - name: albi-current-location
          in: header
          description: Current location ID
          required: true
          schema:
            type: string
        - name: albi-user-coordinates
          in: header
          description: 'User coordinates in format "lat,lon"'
          required: false
          schema:
            type: string
        - name: wineListId
          in: path
          description: ID of the wine list to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                vintages:
                  type: array
                  items:
                    type: object
                    properties:
                      vintageId:
                        type: string
                      userVintageId:
                        type: string
                      modelPrices:
                        type: array
                        items:
                          type: object
                          properties:
                            modelName:
                              type: string
                            capacity:
                              type: number
                            price:
                              type: number
                      isVisible:
                        type: boolean
                extraWineData:
                  type: array
                  items:
                    type: string
                categories:
                  type: array
                  items:
                    type: string
                template:
                  type: string
                isActive:
                  type: boolean
      responses:
        '200':
          description: Wine list updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  winelist:
                    $ref: '#/paths/~1winelists/post/responses/201/content/application~1json/schema/properties/winelist'
        '403':
          description: Forbidden - Wrong location header or field
        '404':
          description: Wine list not found
        '500':
          description: Internal server error
    delete:
      tags:
        - winelists
      summary: Delete wine list
      description: Delete a specific wine list
      parameters:
        - name: albi-current-company
          in: header
          description: Current company ID
          required: true
          schema:
            type: string
        - name: albi-current-location
          in: header
          description: Current location ID
          required: true
          schema:
            type: string
        - name: albi-user-coordinates
          in: header
          description: 'User coordinates in format "lat,lon"'
          required: false
          schema:
            type: string
        - name: wineListId
          in: path
          description: ID of the wine list to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Wine list deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: WineList deleted
        '403':
          description: Forbidden - Wrong location header or field
        '404':
          description: Wine list not found
        '500':
          description: Internal server error
  '/winelists/{wineListId}/enable':
    post:
      tags:
        - winelists
      summary: Enable a specific wine list
      description: Enables a wine list by setting its isActive flag to true
      operationId: enableWineList
      parameters:
        - name: albi-current-company
          in: header
          description: Current company ID
          required: true
          schema:
            type: string
        - name: albi-current-location
          in: header
          description: Current location ID
          required: true
          schema:
            type: string
        - name: albi-user-coordinates
          in: header
          description: 'User coordinates in format "lat,lon"'
          required: false
          schema:
            type: string
        - name: wineListId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locationId:
                  type: string
                  description: The location ID associated with the wine list
              required:
                - locationId
      responses:
        '200':
          description: Wine list successfully enabled
          content:
            application/json:
              schema:
                type: object
                properties:
                  winelist:
                    $ref: '#/paths/~1winelists/post/responses/201/content/application~1json/schema/properties/winelist'
        '400':
          description: Bad request - missing required fields
        '403':
          description: Forbidden - wrong location header or field
        '500':
          description: Internal server error
      security:
        - Authorization: []
  '/winelists/{wineListId}/disable':
    post:
      tags:
        - winelists
      summary: Disable a specific wine list
      description: Disables a wine list by setting its isActive flag to false
      operationId: disableWineList
      parameters:
        - name: albi-current-company
          in: header
          description: Current company ID
          required: true
          schema:
            type: string
        - name: albi-current-location
          in: header
          description: Current location ID
          required: true
          schema:
            type: string
        - name: albi-user-coordinates
          in: header
          description: 'User coordinates in format "lat,lon"'
          required: false
          schema:
            type: string
        - name: wineListId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locationId:
                  type: string
                  description: The location ID associated with the wine list
              required:
                - locationId
      responses:
        '200':
          description: Wine list successfully disabled
          content:
            application/json:
              schema:
                type: object
                properties:
                  winelist:
                    $ref: '#/paths/~1winelists/post/responses/201/content/application~1json/schema/properties/winelist'
        '400':
          description: Bad request - missing required fields
        '403':
          description: Forbidden - wrong location header or field
        '500':
          description: Internal server error
      security:
        - Authorization: []
  /winelists/disable_all:
    post:
      tags:
        - winelists
      summary: Disable all wine lists
      description: Disable all wine lists for a specific location
      parameters:
        - name: albi-current-company
          in: header
          description: Current company ID
          required: true
          schema:
            type: string
        - name: albi-current-location
          in: header
          description: Current location ID
          required: true
          schema:
            type: string
        - name: albi-user-coordinates
          in: header
          description: 'User coordinates in format "lat,lon"'
          required: false
          schema:
            type: string
        - name: location_id
          in: query
          description: ID of the location to disable wine lists for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All wine lists disabled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: All winelists disabled for location
        '400':
          description: Bad request - Missing location ID
        '403':
          description: Forbidden - Invalid location
        '500':
          description: Internal server error
  /production_tags:
    get:
      summary: Get all production tags
      security:
        - Authorization: []
      tags:
        - production_tags
      operationId: getProductionTags
      description: Retrieves all production tags.  Requires admin privileges.  Allows filtering by status.
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - active
              - inactive
              - canceled
          description: Filter tags by status.
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination.
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
          description: Limit for pagination.
      responses:
        '200':
          description: A paginated list of production tags.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        serial:
                          type: string
                        batchNumber:
                          type: string
                        status:
                          type: string
                          enum:
                            - active
                            - inactive
                            - canceled
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  page:
                    type: integer
                  totalPages:
                    type: integer
        '403':
          description: Forbidden. Only admins are allowed.
  /production_tags/upload:
    post:
      summary: Upload production tags
      security:
        - Authorization: []
      tags:
        - production_tags
      operationId: uploadProductionTags
      description: Uploads a batch of production tags. Requires admin privileges.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                batchNumber:
                  type: string
                  description: Batch number for the tags.
                model:
                  type: string
                  description: Model of the NFC tags (not albicchiere's wine container model).
                tags:
                  type: array
                  items:
                    type: string
                  description: Array of tag serials.
              required:
                - batchNumber
                - tags
      responses:
        '201':
          description: Production tags created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: string
                    description: Array of created tag serials.
        '400':
          description: Bad Request.  Invalid input.
        '403':
          description: Forbidden. Only admins are allowed.
  /production_tags/download-csv:
    get:
      summary: Download production tags as CSV
      security:
        - Authorization: []
      tags:
        - production_tags
      operationId: getProductionTagsCSV
      description: Downloads all production tags as a CSV file. Requires admin privileges. Allows filtering by status.
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - active
              - inactive
              - canceled
          description: Filter tags by status.
      responses:
        '200':
          description: CSV file containing production tags.
          content:
            text/csv:
              schema:
                type: string
                description: CSV data
        '403':
          description: Forbidden. Only admins are allowed.
  /production_tags/report_activated:
    post:
      summary: Report activated tags
      security:
        - Authorization: []
      tags:
        - production_tags
      operationId: reportActivatedProductionTags
      description: Updates the status of specified production tags to 'active' and creates corresponding SmartBags. Requires admin privileges.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  items:
                    type: string
                    description: Array of tag serials to activate.
                model:
                  type: string
                  description: ID of the SmartBag model.
                batchNumber:
                  type: string
                  description: Batch number for the tags.
              required:
                - tags
                - model
                - batchNumber
      responses:
        '200':
          description: Tags updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message.
        '400':
          description: Bad Request. Invalid input.
        '403':
          description: Forbidden. Only admins are allowed.
  /production_tags/report_canceled:
    post:
      summary: Report canceled tags
      security:
        - Authorization: []
      tags:
        - production_tags
      operationId: reportCanceledProductionTags
      description: Updates the status of specified production tags to 'canceled'. Requires admin privileges.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  items:
                    type: string
                  description: Array of tag serials to cancel.
              required:
                - tags
      responses:
        '200':
          description: Tags updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message.
        '400':
          description: Bad Request. Invalid input.
        '403':
          description: Forbidden. Only admins are allowed.
  /roles:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - roles
      operationId: getAllRoles
      description: List all roles
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    post:
      summary: Create
      security:
        - Authorization: []
      tags:
        - roles
      operationId: createRole
      description: Create a role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - permissions
              properties:
                name:
                  type: string
                permissions:
                  type: array
                  items:
                    type: object
                    required:
                      - blockId
                      - createPermission
                      - readPermission
                      - updatePermission
                      - deletePermission
                    properties:
                      id:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      createPermission:
                        type: boolean
                      readPermission:
                        type: boolean
                      updatePermission:
                        type: boolean
                      deletePermission:
                        type: boolean
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    $ref: '#/components/schemas/Role'
        '400':
          description: Error on request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_name:
                    type: string
                    enum:
                      - BadRequestError
                  error_message:
                    type: string
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/roles/{roleId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - roles
      operationId: getRoleById
      description: Get details about role
      parameters:
        - in: path
          name: roleId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: albi-current-company
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: true
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: header
          name: albi-current-location
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
          required: false
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    patch:
      summary: Edit
      security:
        - Authorization: []
      tags:
        - roles
      operationId: updateRole
      description: Update role
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: roleId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                permissions:
                  type: array
                  items:
                    type: object
                    required:
                      - blockId
                      - createPermission
                      - readPermission
                      - updatePermission
                      - deletePermission
                    properties:
                      id:
                        type: string
                        pattern: '[a-fA-F0-9]{24}'
                      createPermission:
                        type: boolean
                      readPermission:
                        type: boolean
                      updatePermission:
                        type: boolean
                      deletePermission:
                        type: boolean
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    $ref: '#/components/schemas/Role'
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
    delete:
      summary: Delete
      security:
        - Authorization: []
      tags:
        - roles
      operationId: deleteRole
      description: Delete Role
      parameters:
        - in: path
          name: roleId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        - in: header
          name: if-match
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Role deleted
        '400':
          $ref: '#/paths/~1roles/post/responses/400'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  /roles/blocks:
    get:
      summary: List
      security:
        - Authorization: []
      tags:
        - roles
      operationId: getAllBlocks
      description: List all roles blocks
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  blocks:
                    type: array
                    items:
                      $ref: '#/components/schemas/RoleBlock'
                  page:
                    type: integer
                  pages:
                    type: integer
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
  '/roles/blocks/{blockId}':
    get:
      summary: Detail
      security:
        - Authorization: []
      tags:
        - roles
      operationId: getBlockById
      description: Get role block
      parameters:
        - in: header
          name: albi-user-coordinates
          schema:
            type: string
            pattern: '^-?\d{1,2}(?:\.\d+)?,-?\d{1,3}(?:\.\d+)?$'
          required: false
        - in: path
          name: blockId
          required: true
          schema:
            type: string
            pattern: '[a-fA-F0-9]{24}'
      responses:
        '200':
          description: Object
          headers:
            etag:
              schema:
                type: string
                description: This header is an identifier for a specific version of a resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  block:
                    $ref: '#/components/schemas/RoleBlock'
        '401':
          $ref: '#/paths/~1users/get/responses/401'
        '403':
          $ref: '#/paths/~1users/get/responses/403'
        '404':
          $ref: '#/paths/~1notifications/get/responses/404'
        '500':
          $ref: '#/paths/~1users/get/responses/500'
components:
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - _id
        - cognitoId
        - signInClientId
        - email
        - policyConsent
        - marketingConsent
        - vintagesParentalControl
        - createdAt
        - updatedAt
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
          description: Mongoose db id
        cognitoId:
          type: string
          format: uuid
        signInClientId:
          type: string
          description: Cognito Pool Client Id
        clientIds:
          type: object
          required:
            - id
            - firstAccess
          properties:
            id:
              type: string
            name:
              type: string
            firstAccess:
              type: string
              format: date-time
        provider:
          type: string
          description: 'if user login via social (ex Google, Facebook...)'
        email:
          type: string
          format: email
        name:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
            - other
        avatar:
          type: string
        birthday:
          type: string
          format: date
        nationality:
          type: string
          pattern: '[A-Z]{3}'
        policyConsent:
          type: object
          required:
            - consent
          properties:
            consent:
              type: boolean
        marketingConsent:
          type: object
          required:
            - consent
          properties:
            consent:
              type: boolean
        notifications:
          type: object
          properties:
            general:
              type: object
              properties:
                app:
                  type: boolean
                email:
                  type: boolean
            devices:
              type: object
              properties:
                app:
                  type: boolean
                email:
                  type: boolean
            updatedAt:
              type: string
              format: date-time
            createdAt:
              type: string
              format: date-time
        nation:
          type: string
          pattern: '[A-Z]{3}'
        coordinates:
          type: object
          properties:
            lat:
              type: number
            lng:
              type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        vintagesParentalControl:
          type: array
          items:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        wishlist:
          type: array
          items:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        profiling:
          type: object
    UserCompanyAccess:
      type: object
      required:
        - _id
        - role
        - company
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        locations:
          type: array
          items:
            type: object
            properties:
              locationId:
                type: string
                pattern: '[a-fA-F0-9]{24}'
              role:
                type: string
                pattern: '[a-fA-F0-9]{24}'
              accessId:
                type: string
                pattern: '[a-fA-F0-9]{24}'
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
    UserStat:
      type: object
      required:
        - drunkWines
        - labels
        - glasses
        - favouriteWine
      properties:
        drunkWines:
          type: integer
        labels:
          type: integer
        glasses:
          type: integer
        favouriteWine:
          type: object
          properties:
            value:
              type: integer
              minimum: 0
              maximum: 100
            type:
              type: string
              enum:
                - red
                - white
                - rose
                - red-white
                - red-rose
                - white-rose
                - draw
    UserWishList:
      type: object
      required:
        - wishlist
      properties:
        wishlist:
          type: array
          items:
            type: string
            pattern: '[a-fA-F0-9]{24}'
    UserWishListShared:
      type: object
      required:
        - _id
        - vintages
        - owner
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        vintages:
          type: array
          items:
            type: string
            pattern: '[a-fA-F0-9]{24}'
        owner:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Company:
      type: object
      required:
        - _id
        - type
        - fullName
        - status
        - name
        - phone
        - vatNumber
        - email
        - createdBy
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        type:
          type: string
          enum:
            - winery
            - professional
            - reseller
        fullName:
          type: string
        name:
          type: string
        description:
          type: array
          items:
            type: object
            properties:
              locale:
                type: string
              description:
                type: string
        image:
          type: string
        bannerImage:
          type: string
        phone:
          type: string
        vatNumber:
          type: string
        email:
          type: string
          format: email
        website:
          type: string
          format: uri
        instagram:
          type: string
          format: uri
        facebook:
          type: string
          format: uri
        twitter:
          type: string
          format: uri
        createdBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        createdAt:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - pending
            - active
            - rejected
    Address:
      type: object
      required:
        - _id
        - name
        - isLocationEnabled
        - country
        - city
        - province
        - postalCode
        - address
        - vintagesParentalControl
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        name:
          type: string
        isLocationEnabled:
          type: boolean
        isShipping:
          type: boolean
        isBilling:
          type: boolean
        country:
          type: string
        city:
          type: string
        province:
          type: string
        state:
          type: string
        postalCode:
          type: string
        address:
          type: string
        phone:
          type: string
        geolocation:
          type: object
          properties:
            type:
              type: string
              enum:
                - Point
            coordinates:
              type: array
              default:
                - 138.5940786
                - -35.190243
              items:
                type: number
        tags:
          type: array
          items:
            type: string
        openingHours:
          type: object
          properties:
            monday:
              type: string
            tueday:
              type: string
            wednesday:
              type: string
            thursday:
              type: string
            friday:
              type: string
            saturday:
              type: string
            sunday:
              type: string
        vintagesParentalControl:
          type: array
          items:
            type: string
            pattern: '[a-fA-F0-9]{24}'
    WineContainer:
      type: object
      required:
        - _id
        - type
        - capacity
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        type:
          type: string
          enum:
            - smart_bag
            - bottle
        capacity:
          type: integer
          minimum: 1
    UserVintage:
      type: object
      required:
        - _id
        - name
        - winery
        - year
        - wineColor
        - temperature
        - createdBy
        - updatedBy
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        name:
          type: string
        winery:
          type: string
        year:
          type: string
        wineColor:
          type: string
          enum:
            - red
            - white
            - rose
        temperature:
          type: integer
        region:
          type: string
        grapes:
          type: array
          items:
            type: string
        alcohol:
          type: number
        location:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        label:
          type: string
          format: uri
        createdBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        createAt:
          type: string
        updatedBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        updatedAt:
          type: string
    Wine:
      type: object
      required:
        - _id
        - wineryId
        - name
        - description
        - wineColor
        - region
        - status
        - isClaimedByWinery
        - createdBy
        - createdAt
        - updatedBy
        - updatedAt
      properties:
        _id:
          type: string
        wineryId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        name:
          type: string
        description:
          type: array
          items:
            type: object
            properties:
              locale:
                type: string
              description:
                type: string
        wineColor:
          type: string
          enum:
            - red
            - white
            - rose
        region:
          type: string
        wineTypes:
          type: array
          items:
            type: string
        grapes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              id:
                type: string
        status:
          type: string
          enum:
            - pending
            - active
            - rejected
        isClaimedByWinery:
          type: boolean
        createdBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        createdAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        updatedAt:
          type: string
          format: date-time
    WineVintage:
      type: object
      required:
        - _id
        - wineId
        - year
        - alcohol
        - temperature
        - label
        - status
        - isClaimedByWinery
        - createdBy
        - createdAt
        - updatedBy
        - updatedAt
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        wineId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        year:
          type: number
        yearDetails:
          type: string
        description:
          type: string
        alcohol:
          type: number
        temperature:
          type: integer
        moods:
          type: array
          items:
            type: object
            required:
              - name
              - icon
            properties:
              name:
                type: string
              icon:
                type: string
        pairings:
          type: array
          items:
            type: object
            required:
              - name
              - icon
            properties:
              name:
                type: string
              icon:
                type: string
              match:
                type: string
                enum:
                  - good
                  - perfect
        allergens:
          type: array
          items:
            type: string
        philosophy:
          type: array
          items:
            type: string
        images:
          type: object
          properties:
            bottle:
              type: object
              properties:
                default:
                  type: string
            label:
              type: object
              properties:
                default:
                  type: string
                dispenser:
                  type: string
                smartbag:
                  type: string
            others:
              type: array
              items:
                type: string
        awards:
          type: array
          items:
            type: string
        status:
          type: string
          enum:
            - pending
            - active
            - rejected
        isClaimedByWinery:
          type: boolean
        createdBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        createdAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        updatedAt:
          type: string
          format: date-time
    WineVintageReview:
      type: object
      required:
        - _id
        - vintageId
        - ownerId
        - description
        - rating
        - createdBy
        - createdAt
        - updatedBy
        - updatedAt
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        vintageId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        ownerId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        certified:
          type: boolean
        description:
          type: string
        rating:
          type: integer
        intensity:
          type: number
          format: double
        tannin:
          type: number
          format: double
        sweetness:
          type: number
          format: double
        acidity:
          type: number
          format: double
        fizziness:
          type: number
          format: double
        createdBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        createdAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        updatedAt:
          type: string
          format: date-time
    WineVintageReviewRecap:
      type: object
      required:
        - _id
        - rating1
        - rating2
        - rating3
        - rating4
        - rating5
        - avgIntensity
        - avgTannin
        - avgSweetness
        - avgAcidity
        - avgFizziness
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        average:
          type: number
          format: double
        rating1:
          type: integer
        rating2:
          type: integer
        rating3:
          type: integer
        rating4:
          type: integer
        rating5:
          type: integer
        avgIntensity:
          type: number
          format: double
        avgTannin:
          type: number
          format: double
        avgSweetness:
          type: number
          format: double
        avgAcidity:
          type: number
          format: double
        avgFizziness:
          type: number
          format: double
    Bottle:
      type: object
      required:
        - _id
        - createdBy
        - model
        - vintageId
        - ownerId
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        createdBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        model:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        vintageId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        ownerId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
    SmartBag:
      type: object
      required:
        - _id
        - createdBy
        - model
        - type
        - serial
        - expiryDate
        - refillCounter
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        createdBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        model:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        vintageId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        ownerId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        pairedBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        type:
          type: string
          enum:
            - empty
            - empty
        serial:
          type: string
          pattern: '[A-F0-9]{16}'
        quantityLeft:
          type: number
        customTemperature:
          type: number
        qualityScore:
          type: number
          minimum: 0
          maximum: 100
        openedAt:
          type: string
          format: date-time
        bestBefore:
          type: string
          format: date-time
        expiryDate:
          type: string
          format: date-time
        refillCounter:
          type: integer
          minimum: 0
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        wineBatch:
          type: string
    RoleBlock:
      type: object
      required:
        - _id
        - blockName
        - regex
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        blockName:
          type: string
        regex:
          type: array
          items:
            type: string
    Role:
      type: object
      required:
        - _id
        - name
        - permissions
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        name:
          type: string
        companyId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        permissions:
          type: array
          items:
            type: object
            required:
              - blockId
              - createPermission
              - readPermission
              - updatePermission
              - deletePermission
            properties:
              blockId:
                type: string
                pattern: '[a-fA-F0-9]{24}'
              createPermission:
                type: boolean
              readPermission:
                type: boolean
              updatePermission:
                type: boolean
              deletePermission:
                type: boolean
        createdBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        createdAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        updatedAt:
          type: string
          format: date-time
    Dispenser:
      type: object
      required:
        - _id
        - name
        - model
        - serial
        - firmware
        - batteryStatus
        - status
        - mode
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        ownerId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        name:
          type: string
        model:
          type: string
          enum:
            - Albi Home M+
            - Albi Home S
            - Albi Pro
        serial:
          type: string
        thingName:
          type: string
        macAddress:
          type: string
        wifiName:
          type: string
        firmware:
          type: string
        batteryStatus:
          type: string
          enum:
            - empty
            - low
            - half
            - full
            - charging
            - plugged
        mode:
          type: string
          enum:
            - eco
            - boost
            - silent
        pairedAt:
          type: string
          format: date-time
        pairedBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        chassis:
          type: object
          properties:
            chassis:
              type: string
              pattern: '[a-fA-F0-9]{24}'
            slot:
              type: number
        parentalControl:
          type: boolean
        serviceSchedule:
          type: string
          format: date-time
        wineReadyAt:
          type: string
          format: date-time
        lastConnection:
          type: string
          format: date-time
        roomId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        bagId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
    Chassis:
      type: object
      required:
        - _id
        - name
        - totalSlots
        - createdBy
        - updatedBy
        - ownerId
        - roomId
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        name:
          type: string
        totalSlots:
          type: number
        createdBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        updatedBy:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        ownerId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        roomId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
    DispenserRoom:
      type: object
      required:
        - _id
        - name
        - ownerId
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        name:
          type: string
        ownerId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
    Job:
      type: object
      required:
        - _id
        - timestamp
        - userId
        - dispenserId
        - httpRequest
        - status
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        timestamp:
          type: string
          format: date-time
        userId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        dispenserId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        httpRequest:
          type: object
          properties:
            method:
              type: string
              enum:
                - get
                - post
                - delete
                - patch
                - put
            url:
              type: string
            queryParameters:
              type: object
            body:
              type: object
        status:
          type: string
          enum:
            - pending
            - running
    ExecutedJob:
      type: object
      required:
        - _id
        - timestamp
        - userId
        - dispenserId
        - httpRequest
        - status
        - result
      properties:
        _id:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        timestamp:
          type: string
          format: date-time
        userId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        dispenserId:
          type: string
          pattern: '[a-fA-F0-9]{24}'
        httpRequest:
          type: object
          properties:
            method:
              type: string
              enum:
                - get
                - post
                - delete
                - patch
                - put
            url:
              type: string
            queryParameters:
              type: object
            body:
              type: object
        status:
          type: string
          enum:
            - failed
            - completed
        result:
          type: object
